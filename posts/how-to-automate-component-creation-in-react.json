{
  "layout": "post",
  "date": "2022-01-27 11:41:26",
  "title": "How to automate component creation in React",
  "image": "/public/img/jake-walker-mpkqidpmyqu-unsplash.jpg",
  "description": "Generate new components without having to import basic libraries and write boilerplate code",
  "body": "When developing a React project, we constantly have to create new components. This is good practice, as it follows the principles of Atomic Design where you develop a component for every \"atom\" of your project's Design System.\n\nHowever, there are some things that have to be done every time we do this. They are usually done by copying and pasting another component, renaming it, renaming constant/variable names inside the files and erasing the rest of the code.\n\nWe want to automate this because:\n\n1. It saves time\n2. It keeps the boilerplate code consistent across your app\n\nIn this article, I will show you how to generate a new component with a simple command.\n\n## Installing Plop.js\n\nAdd plop to your project with:\n\n```\n$ npm install --save-dev plop\n```\n\nor, if you're using yarn:\n\n```\n$ yarn add -D plop\n```\n\n## Configuring Plop.js\n\nCreate a folder called **generators** at the root of your project.\n\nLet's say my component architecture is a folder with an **index.tsx** file and a **styles.ts** file. Create a file called **plopfile.js** inside generators and paste this config:\n\n```\nmodule.exports = function (plop) {\n  plop.setGenerator('component', {\n    description: 'application component logic',\n\n    // inquirer prompts\n    prompts: [\n      {\n        type: 'input',\n        name: 'name',\n        message: 'component name?'\n      }\n    ],\n\n    // actions to perform\n    actions: [\n      {\n        type: 'add',\n        path: '../src/components/{{name}}/index.tsx',\n        templateFile: 'templates/index.tsx.hbs'\n      },\n      {\n        type: 'add',\n        path: '../src/components/{{name}}/styles.ts',\n        templateFile: 'templates/styles.ts.hbs'\n      }\n    ]\n  })\n}\n```\n\n\\\n\\\ndsadsadsa"
}